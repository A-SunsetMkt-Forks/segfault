user www-data;
# user nginx;
worker_processes auto;
pid /run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 32;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	#ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	# include /etc/nginx/conf.d/*.conf;
	# include /etc/nginx/sites-enabled/*;

	server {
		listen 80 default_server;
		server_name _;
		# root /var/www/html;
		root /dev/null;

		gzip off;

		location / {
			try_files $uri $uri/ = 404;

			location ~* ^/net/.* {
				fastcgi_param REMOTE_ADDR        $remote_addr;
				fastcgi_param REQUEST_URI        $request_uri;
				fastcgi_param REQUEST_BODY       $request_body;
				fastcgi_param FCGI_CMD           net;
				fastcgi_param SCRIPT_FILENAME    /cgi-bin/rpc;
				fastcgi_pass  unix:/dev/shm/master/fcgiwrap.socket;
			}
			location ~* ^/dmesg/ {
				fastcgi_param REMOTE_ADDR        $remote_addr;
				fastcgi_param REQUEST_URI        $request_uri;
				fastcgi_param REQUEST_BODY       $request_body;
				fastcgi_param FCGI_CMD           dmesg;
				fastcgi_param SCRIPT_FILENAME    /cgi-bin/rpc;
				fastcgi_pass  unix:/dev/shm/master/fcgiwrap.socket;
			}

			# location /luacgi {
			# 	internal;
			# 	set_unescape_uri $r_colour       $arg_r_colour;
			# 	set_unescape_uri $r_port         $arg_r_port;
			# 	set_unescape_uri $r_wg_public    $arg_r_wg_public;

			# 	fastcgi_param REMOTE_ADDR        $remote_addr;
			# 	fastcgi_param REQUEST_URI        $request_uri;
			# 	fastcgi_param SCRIPT_FILENAME    /cgi-bin/rpc;
			# 	fastcgi_param FCGI_CMD           $arg_cmd;
			# 	fastcgi_param FCGI_R_COLOUR      $r_colour;
			# 	fastcgi_param FCGI_R_PORT        $r_port;
			# 	fastcgi_param FCGI_R_WG_PUBLIC   $r_wg_public;

			# 	fastcgi_pass  unix:/dev/shm/master/fcgiwrap.socket;
			# }
			# location ~* ^/dmesg/ {
			# 	content_by_lua_block {
			# 		ngx.req.read_body()
			# 		local args, err = ngx.req.get_post_args(10)
			# 		if not args then
			# 			ngx.exit(ngx.HTTP_FORBIDDEN)
			# 			return
			# 		end
			# 		local res = ngx.location.capture("/luacgi", {args = {cmd = "dmesg", r_colour = args['color'], r_uri = ngx.var.uri}})
			# 		if not res.status == ngx.HTTP_OK then
            # 		    ngx.say(res.status)
            # 		    return
            # 		end
            #     	ngx.say(res.body)
			# 	}
			# }
			# location ~* ^/net/.* {
			# 	content_by_lua_block {
			# 		ngx.req.read_body()
			# 		local args, err = ngx.req.get_post_args(10)
			# 		if not args then
			# 			ngx.exit(ngx.HTTP_FORBIDDEN)
			# 			return
			# 		end
			# 		local res = ngx.location.capture("/luacgi", {args = {cmd = "net", r_port = args['port'], r_wg_public = args['public'], r_colour = args['color'], r_uri = ngx.var.uri}})
			# 		if not res.status == ngx.HTTP_OK then
            # 		    ngx.say(res.status)
            # 		    return
            # 		end
            #     	ngx.say(res.body)
			# 	}
			# }
		}

	}
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
