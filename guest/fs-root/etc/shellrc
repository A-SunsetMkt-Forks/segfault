
# Sources as the last entry from ~/.zshrc or ~/.bashrc
CY="\e[1;33m" # yellow
CDY="\e[0;33m" # yellow
CR="\e[1;31m" # red
CB="\e[1;34m" # blue
CDB="\e[0;34m" # blue
CC="\e[1;36m" # cyan
CG="\e[1;32m" # green
CDG="\e[0;32m" # green
CDC="\e[0;36m" # cyan
CDR="\e[0;31m" # red
CN="\e[0m"    # none
CW="\e[1;37m" # white
CF="\e[2m"    # faint
CUL="\e[4m"

alias l='ls -Alh'
alias lt='ls -Alhrt'

[[ -e /usr/bin/nvim ]] && {
	alias vi='nvim'
	alias vim='nvim'
}

tty -s && [[ -n $TERM ]] && [[ "$TERM" != dumb ]] && {
	# Be gay and color it all. We love it.
	[[ -e /usr/bin/grc ]] && {
		cmds+=(configure curl df dig du env findmnt free id ifconfig)
		cmds+=(lsattr lsblk lsof make mount mtr netstat nmap ntpdate)
		cmds+=(ping ps pv pss stat sysctl traceroute uptime vmstat wdiff whois)
		for c in "${cmds[@]}"; do
			alias $c="/usr/bin/grc --colour=auto $c"
		done
		unset cmds

		# These need stdout buffer disabled:
		cmds+=(tcpdump)
		for c in "${cmds[@]}"; do
			alias $c="/usr/bin/stdbuf -o0 /usr/bin/grc --colour=auto $c"
		done
		unset cmds
	}

	[[ -e /usr/bin/lsd ]] && {
		alias ls='lsd --icon never'
	}

	[[ -e /usr/share/source-highlight/src-hilite-lesspipe.sh ]] && {
		export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
		export LESS=' -R '
	}

	[[ -e /usr/bin/highlight ]] && {
		alias cat='highlight -O ansi --stdout'
	}
}

[[ -f /usr/bin/zoxide ]] && {
	eval "$(zoxide init $(basename $SHELL))"
	alias cd='z'
}

[[ -f /usr/bin/fdfind ]] && alias fd=fdfind

[[ -z $LANG ]] && export LANG=en_US.UTF-8

[[ -e /sec/THIS-DIRECTORY-IS-NOT-ENCRYPTED--DO-NOT-USE.txt ]] && { echo >&2 "WARNING: /sec is NOT encrypted. PRESS ENTER to continue..."; read; }

[[ -n $SF_IS_GOLD_PROMPT ]] && [[ -n $PROMPT ]] && {
	prompt_symbol=ðŸ’›
	PROMPT= PROMPT=$'%F{%(#.blue.green)}â”Œâ”€â”€${debian_chroot:+($debian_chroot)â”€}${VIRTUAL_ENV:+($(basename $VIRTUAL_ENV))â”€}(%F{%(#.yellow.blue)}%n'$prompt_symbol$'%m%b%F{%(#.blue.green)})-[%B%F{reset}%(6~.%-1~/â€¦/%4~.%5~)%b%F{%(#.blue.green)}]\n%{%Gâ””%}%{%Gâ”€%}%B%(#.%F{yellow}#.%F{blue}$)%b%F{reset} '
}

_sf_info_non_perm()
{
	# On success show this...
	echo -e "${CDB}[${CDY}SF${CDB}] ${CR}Your changes will be lost."
	echo -e "${CDB}[${CDY}SF${CDB}] ${CB}${CUL}https://www.thc.org/segfault/faq/#lost${CN}"
}

apt()
{
	/usr/bin/apt "$@"

	# Show a warning on success on quota-error or package not found.
	# (All errors set $? to 100 and can not be distinguished)
	_sf_info_non_perm
}

apt-get()
{
	/usr/bin/apt-get "$@"

	_sf_info_non_perm
}

